Title: clipr
NoSidebar: true
NoTitle: true
---
<h2>A Command Line Interface ParseR for .Net 3.5+ and .Net Core</h2>

<p>Created by <a href="https://github.com/nemec">Dan Nemec</a></p>
<p><a href="https://www.nuget.org/packages/clipr/"><img src="https://camo.githubusercontent.com/6ec11c1cf2ff21764c27abf24943fb948d8203d7/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f636c6970722e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/dt/clipr.svg" style="max-width:100%;"></a>
<a href="https://www.nuget.org/packages/clipr/"><img src="https://camo.githubusercontent.com/85c724afa45c865bf146bf291d10565bfc8d8653/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f636c6970722e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/v/clipr.svg" style="max-width:100%;"></a>
<a href="https://www.nuget.org/packages/clipr/"><img src="https://camo.githubusercontent.com/24bd7358f422b1032506aa7cf7c734327f06df73/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f767072652f636c6970722e737667" alt="NuGet" data-canonical-src="https://img.shields.io/nuget/vpre/clipr.svg" style="max-width:100%;"></a></p>

<p>Here's a quick but powerful example of the objects this library enables you to build:</p>

<pre>
<code class="language-csharp hljs">[ApplicationInfo(Description = <span class="hljs-string">"This is a set of options."</span>)]
<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Options</span>
{
    [NamedArgument(<span class="hljs-string">'v'</span>, <span class="hljs-string">"verbose"</span>, Action = ParseAction.Count,
        Description = <span class="hljs-string">"Increase the verbosity of the output."</span>)]
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> Verbosity { <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; }

    [PositionalArgument(<span class="hljs-number">0</span>, MetaVar = <span class="hljs-string">"OUT"</span>,
        Description = <span class="hljs-string">"Output file."</span>)]
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">string</span> OutputFile { <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; }

    [PositionalArgument(<span class="hljs-number">1</span>, MetaVar = <span class="hljs-string">"N"</span>,
        NumArgs = <span class="hljs-number">1</span>,
        Constraint = NumArgsConstraint.AtLeast,
        Description = <span class="hljs-string">"Numbers to sum."</span>)]
    <span class="hljs-keyword">public</span> List&lt;<span class="hljs-keyword">int</span>&gt; Numbers { <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; } 
}

<span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"></span>)
</span>{
    <span class="hljs-keyword">var</span> opt = CliParser.Parse&lt;Options&gt;(
        <span class="hljs-string">"-vvv output.txt 1 2 -1 7"</span>.Split());
    Console.WriteLine(opt.Verbosity);
    <span class="hljs-comment">// &gt;&gt;&gt; 3</span>

    Console.WriteLine(opt.OutputFile);
    <span class="hljs-comment">// &gt;&gt;&gt; output.txt</span>

    <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;
    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> number <span class="hljs-keyword">in</span> opt.Numbers)
    {
        sum += number;
    }
    Console.WriteLine(sum);
    <span class="hljs-comment">// &gt;&gt;&gt; 9</span>
}
</code>
</pre>

<p>You can explore additional documentation by selecting sections from the navigation bar at the top of the page.</p>